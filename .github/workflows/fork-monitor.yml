name: Fork Risk Monitor

on:
  schedule:
    # Run every hour at minute 5
    - cron: '5 * * * *'
  workflow_dispatch:
    # Allow manual trigger for testing
    
  # Run on push to update data during development
  push:
    branches: [ fork-meter-implementation ]
    paths: [ 'scripts/**', 'contracts/**' ]

jobs:
  calculate-fork-risk:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Allow pushing changes back to repo
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper git operations
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Calculate fork risk
        env:
          ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
        run: npm run calculate-fork-risk
      
      - name: Check for changes
        id: git-check
        run: |
          if [[ $(git diff --name-only) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Files changed:"
            git diff --name-only
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi
      
      - name: Commit and push changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add data/fork-risk.json
          
          # Create commit message with timestamp and key metrics
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M UTC")
          RISK_LEVEL=$(cat data/fork-risk.json | grep -o '"riskLevel": "[^"]*' | cut -d'"' -f4)
          RISK_PERCENT=$(cat data/fork-risk.json | grep -o '"riskPercentage": [0-9]*' | cut -d':' -f2 | tr -d ' ')
          LARGEST_BOND=$(cat data/fork-risk.json | grep -o '"largestDisputeBond": [0-9]*' | cut -d':' -f2 | tr -d ' ')
          
          git commit -m "Update fork risk: ${RISK_LEVEL} (${RISK_PERCENT}%) - ${TIMESTAMP}

          Risk Level: ${RISK_LEVEL}
          Risk Percentage: ${RISK_PERCENT}%
          Largest Dispute Bond: ${LARGEST_BOND} REP
          Timestamp: ${TIMESTAMP}
          
          Generated by automated fork risk monitoring system"
          
          git push
      
      - name: Create summary
        run: |
          echo "## Fork Risk Monitoring Results" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u +"%Y-%m-%d %H:%M UTC")" >> $GITHUB_STEP_SUMMARY
          
          # Extract key metrics from JSON
          RISK_LEVEL=$(cat data/fork-risk.json | grep -o '"riskLevel": "[^"]*' | cut -d'"' -f4)
          RISK_PERCENT=$(cat data/fork-risk.json | grep -o '"riskPercentage": [0-9]*' | cut -d':' -f2 | tr -d ' ')
          LARGEST_BOND=$(cat data/fork-risk.json | grep -o '"largestDisputeBond": [0-9]*' | cut -d':' -f2 | tr -d ' ')
          THRESHOLD_PERCENT=$(cat data/fork-risk.json | grep -o '"forkThresholdPercent": [0-9.]*' | cut -d':' -f2 | tr -d ' ')
          SECURITY_RATIO=$(cat data/fork-risk.json | grep -o '"securityRatio": [0-9.]*' | cut -d':' -f2 | tr -d ' ')
          ACTIVE_DISPUTES=$(cat data/fork-risk.json | grep -o '"activeDisputes": [0-9]*' | cut -d':' -f2 | tr -d ' ')
          
          echo "**Risk Level:** ${RISK_LEVEL}" >> $GITHUB_STEP_SUMMARY
          echo "**Risk Percentage:** ${RISK_PERCENT}%" >> $GITHUB_STEP_SUMMARY
          echo "**Largest Dispute Bond:** ${LARGEST_BOND} REP" >> $GITHUB_STEP_SUMMARY
          echo "**Fork Threshold Progress:** ${THRESHOLD_PERCENT}% of 275,000 REP" >> $GITHUB_STEP_SUMMARY
          echo "**Security Ratio:** ${SECURITY_RATIO}x (target: 5x, minimum: 3x)" >> $GITHUB_STEP_SUMMARY
          echo "**Active Disputes:** ${ACTIVE_DISPUTES}" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.git-check.outputs.changes }}" == "true" ]]; then
            echo "✅ **Status:** Data updated and committed to repository" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **Status:** No changes detected, data unchanged" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Upload calculation results
        uses: actions/upload-artifact@v4
        with:
          name: fork-risk-data
          path: data/fork-risk.json
          retention-days: 30